version: '3.8'

services:
  # Frontend Service
  frontend:
    build: ../frontend
    ports:
      - "3000:3000"
    depends_on:
      - backend
    environment:
      - REACT_APP_API_URL=http://localhost:8000
    container_name: ailinter-frontend
    restart: unless-stopped

  # Backend Service
  backend:
    build: ../backend
    ports:
      - "8000:8000"
    depends_on:
      redis:
        condition: service_healthy
      rabbitmq:
        condition: service_started
    environment:
      - REDIS_HOST=redis
      - RABBITMQ_HOST=rabbitmq
      - REDIS_PORT=6379
      - RABBITMQ_PORT=5672
      - RABBITMQ_USERNAME=guest
      - RABBITMQ_PASSWORD=guest
      - RABBITMQ_QUEUE=code_analysis
      - API_HOST=0.0.0.0
      - API_PORT=8000
      - DEBUG=false
      - GEMINI_API_KEY=${GEMINI_API_KEY}
    container_name: ailinter-backend
    restart: unless-stopped

  # Worker Service
  worker:
    build: ../worker
    depends_on:
      - redis
      - rabbitmq
    environment:
      - REDIS_HOST=redis
      - RABBITMQ_HOST=rabbitmq
      - REDIS_PORT=6379
      - RABBITMQ_PORT=5672
      - RABBITMQ_USERNAME=guest
      - RABBITMQ_PASSWORD=guest
      - RABBITMQ_QUEUE=code_analysis
      - GEMINI_API_KEY=${GEMINI_API_KEY}
      - WORKER_NAME=ailinter_worker
      - LOG_LEVEL=INFO
    container_name: ailinter-worker
    restart: unless-stopped

  # Redis Service
  redis:
    image: redis:7-alpine
    ports:
      - "6379:6379"
    container_name: ailinter-redis
    restart: unless-stopped
    command: redis-server --appendonly yes
    volumes:
      - redis_data:/data
    healthcheck:
      test: ["CMD", "redis-cli", "ping"]
      interval: 5s
      timeout: 3s
      retries: 5

  # RabbitMQ Service
  rabbitmq:
    image: rabbitmq:3-management-alpine
    ports:
      - "5672:5672"
      - "15672:15672"
    environment:
      - RABBITMQ_DEFAULT_USER=guest
      - RABBITMQ_DEFAULT_PASS=guest
    container_name: ailinter-rabbitmq
    restart: unless-stopped
    volumes:
      - rabbitmq_data:/var/lib/rabbitmq
    healthcheck:
      test: ["CMD", "rabbitmq-diagnostics", "ping"]
      interval: 10s
      timeout: 5s
      retries: 5

volumes:
  redis_data:
  rabbitmq_data: 